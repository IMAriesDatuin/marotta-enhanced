/* -------------------------------------------------- */
/* CARD
/* -------------------------------------------------- */

// OPTIONS
$card-options: (
	sizes: (
		small: 25%,
		medium: 50%,
		large: 75%
	),

	font: $headline,

	width: 300px,
	height: 375px,

	border-color: $white,
	border-hover-color: $secondary,

	background-color: $white,
	background-hover-color: transparent,

	drop-shadow-color: #38448f,

	radius: 6px,
	translatex-amount: 0,
	translatey-amount: -10px,
	scale-amount: 1,
	
	duration: 200ms,
	delay: 0,
	ease: $easeNatural
);


// MAIN
.card {

	$self: &;

	@include shadow(
		$type: 'box-shadow',
		$color: map-get($card-options, drop-shadow-color),
		$x: 0,
		$y: 4px,
		$blur: 16px,
		$spread: 0,
		$alpha: 0.15,
		$strength: 0, 
		$inset: false
	);
	@include transition(
		$property: (border, box-shadow, transform),
		$duration: map-get($card-options, duration),
		$delay: map-get($card-options, delay),
		$ease: map-get($card-options, ease),
		$optimize: false
	);
	cursor: pointer;
	overflow: hidden;
	position: relative;
	width: 25%;
	max-width: map-get($card-options, width);
	height: map-get($card-options, height);
	border-radius: map-get($card-options, radius);
	border: thin solid map-get($card-options, border-color);
	background: map-get($card-options, background-color);
	transform: translate3d(0,0,0) scale3d(1,1,1);
	transform-origin: bottom center;

	&-text-block {

		/*
		@include fade(
			$type: 'bottom',
			$color: $white,
			$alpha: 1,
			$scale: 100%,
			$start: 0,
			$stop: 100%,
			$order: -1,
			$prefix: '',
			$suffix: '::after',
			$is-fixed: false,
			$clickable: false
		);
		*/
		z-index: 1;
		display: flex;
		flex: 1;
		flex-direction: column;
		flex-wrap: nowrap;
		align-items: center;
		justify-content: center;
		position: absolute;
		left: 0;
		bottom: 0;
		padding: {
			top: 0;
			right: $gutter;
			bottom: 2rem;
			left: $gutter;
		};
		width: 100%;
		height: 10%;
		text-align: center;

		#{$self}-headline {
			@include transition(
				$property: (color, letter-spacing, transform),
				$duration: map-get($card-options, duration),
				$delay: map-get($card-options, delay),
				$ease: map-get($card-options, ease),
				$optimize: false
			);
			position: relative;
			margin-bottom: 0;
			width: 100%;
			color: $secondary;
			font: $subheadline;
			font-size: 1em;
			letter-spacing: 0.125em;
			text-align: right;
			text-transform: uppercase;
			transform: translate3d(0,0,0);
		}

		@include break($min: 0, $max: $mobile, $orientation: 'both') {
			padding: {
				top: 2rem;
				bottom: 2rem;
			};
			height: 100%;
		}

	}

	.block-cap {
		height: 35%;
		transform: scale3d(1,1,1);
	}

	&:hover,
	&.is-active,
	&.is-touch {

		@include shadow(
			$type: 'box-shadow',
			$color: #38448f,
			$x: 0,
			$y: 18px,
			$blur: 32px,
			$spread: 0,
			$alpha: 0.25,
			$strength: 0,
			$inset: false
		);
		//border: 1px solid rgba($gray, 0);
		transform: translate3d(map-get($card-options, translatex-amount), map-get($card-options, translatey-amount), 0) scale3d(map-get($card-options, scale-amount), map-get($card-options, scale-amount), 1);

		#{$self}-text-block {

			#{$self}-headline {
				color: $white;
				letter-spacing: 0.2em;
				transform: translate3d(0,-2px,0);
			}

		}

		.block-cap {

			transform: scale3d(1,0.5,1);

			ellipse, line,
			path, polygon,
			polyline, rect {
				fill: $secondary;
			}

		}

	}

	@include break($min: $mobile, $max: $tablet, $orientation: 'portrait') {
		height: 275px;
	}

	@include break($min: 0, $max: $mobile, $orientation: 'portrait') {
		height: 200px;
	}

	@include break($min: 0, $max: $mobile, $orientation: 'landscape') {
		height: 400px;
	}

}


// MODIFIERS
.card {

	$self: &;

	// SIZES
	&-small {

		width: 100%;
		max-width: map-get(map-get($card-options, sizes), small);

		@include break($min: $mobile, $max: $laptop, $orientation: '') {
			max-width: 50%;
		}

		@include break($min: 0, $max: $mobile, $orientation: 'both') {
			max-width: 100%;
		}

	}

	&-medium {
		width: 100%;
		max-width: map-get(map-get($card-options, sizes), medium);
	}

	&-large {
		width: 100%;
		max-width: map-get(map-get($card-options, sizes), large);
	}

	&-full {
		width: 100%;
		max-width: 100%;
	}

	@include break($min: 0, $max: $mobile, $orientation: 'both') {

		&-small,
		&-medium,
		&-large {
			width: 100%;
			max-width: 100%;			
		}

		&-expand {
			margin: {
				left: auto;
				right: auto;
			}
			width: 100%;
			max-width: 100%;
		}

	}


	// STATE
	&.disabled {
		cursor: not-allowed;
		pointer-events: none;
		color: $light-gray;
		border-color: $gray;
		background: $gray;
	}

	@include break($min: 0, $max: $mobile, $orientation: 'both') {
		margin: {
			left: auto;
			right: auto;
		}
		width: 100%;
		max-width: 100%;
	}
	
}
