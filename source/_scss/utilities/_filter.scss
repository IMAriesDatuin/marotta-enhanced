/* -------------------------------------------------- */
/* FILTER
/* -------------------------------------------------- */

// BOX SHADOW
.box-shadow {

	@each $name, $amount in $amounts {

		&-#{$name} {

			@include breakpoint($prefix: '-', $suffix: '') {

				@include shadow($type: 'box-shadow', $color: #32325d, $x: 0, $y: $amount * 0.75, $blur: $amount, $spread: 0, $alpha: 0.25, $strength: 0, $inset: false);

			}

		}

	}

}


// DROP SHADOW
.drop-shadow {

	@each $name, $amount in $amounts {

		&-#{$name} {

			@include breakpoint($prefix: '-', $suffix: '') {

				@include shadow($type: 'drop-shadow', $color: $black, $x: $amount * 0.5, $y: $amount * 0.5, $blur: $amount, $spread: 0, $alpha: 0.25, $strength: 0, $inset: false);

			}

		}

	}

}


// TEXT SHADOW
.text-shadow {

	@each $name, $amount in $amounts {

		&-#{$name} {

			@include breakpoint($prefix: '-', $suffix: '') {

				@include shadow($type: 'text-shadow', $color: $black, $x: $amount * 0.5, $y: $amount, $blur: 2px, $alpha: 0.5, $strength: 1);

			}

		}

	}

}


// BLUR
.blur {

	@each $name, $amount in $amounts {

		&-#{$name} {

			@include breakpoint($prefix: '-', $suffix: '') {
				filter: blur($amount / 2);
			}

		}

		&-svg {

			@include breakpoint($prefix: '-', $suffix: '') {
				filter: url(#blur);
			}

		}

	}

}


// MIX BLEND MODE
.mix-blend-mode {

	&-color {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: color;
		}

	}

	&-color-burn {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: color-burn;
		}

	}

	&-color-dodge {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: color-dodge;
		}

	}

	&-darken {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: darken;
		}

	}
	
	&-difference {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: difference;
		}

	}

	&-exclusion {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: exclusion;
		}

	}

	&-hard-light {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: hard-light;
		}

	}

	&-hue {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: hue;
		}

	}

	&-lighten {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: lighten;
		}

	}

	&-luminosity {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: luminosity;
		}

	}

	&-overlay {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: overlay;
		}

	}

	&-multiply {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: multiply;
		}

	}

	&-soft-light {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: soft-light;
		}

	}

	&-saturation {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: saturation;
		}

	}

	&-screen {

		@include breakpoint($prefix: '-', $suffix: '') {
			mix-blend-mode: screen;
		}

	}

}


// BACKDROP BLUR
@supports (-webkit-backdrop-filter: none) or (backdrop-filter: none) {

	.frost {

		@each $name, $amount in $amounts {

			&-#{$name} {

				@include breakpoint($prefix: '-', $suffix: '') {
					backdrop-filter: blur($amount * 2);
					//background: rgba($charcoal, 0);
					background: linear-gradient(to bottom, rgba($charcoal, 1) 0%, rgba($charcoal, 0) 100%);
				}

			}

		}

	}

}
