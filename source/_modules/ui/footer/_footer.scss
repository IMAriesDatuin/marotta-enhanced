/* -------------------------------------------------- */
/* FOOTER
/* -------------------------------------------------- */

// OPTIONS
$footer-options: (
	text-color: $white, // Set the default color for all elements.
	text-hover-color: $accent, // Set the hover color for all elements.
	background-color: $charcoal, // Set the nav panel's background color.
	duration: 1000ms,
	delay: 200ms,
	ease: $easeWipe
);


// MAIN
.footer {

	$self: &;

	//overflow: hidden;
	position: relative;
	padding: {
		top: 0;
		left: $gutter;
		right: $gutter;
	}
	width: 100%;
	background: map-get($footer-options, background-color);

	.block-cap {

		@include break($min: 0, $max: $mobile, $orientation: 'both') {
			height: 75px;
		}

	}

	&-container {

		margin: {
			right: auto;
			//bottom: 2rem;
			left: auto;
		};
		padding-top: 12rem;
		//max-width: $width;
		max-width: 1920px;

		#{$self}-menu,
		#{$self}-social,
		#{$self}-contact,
		#{$self}-form {

			//overflow: hidden;
			position: relative;
			margin-bottom: 6rem;

			li {
				margin-bottom: 2rem;
			}

		}

		#{$self}-menu {

			li {

				display: block;

				a {

					@include transition(
						$property: (color),
						$duration: map-get($hero-options, duration),
						$delay: map-get($hero-options, delay),
						$ease: map-get($hero-options, ease),
						$optimize: false
					);
					overflow: hidden;
					position: relative;
					color: map-get($hero-options, text-color);
					font: map-get($hero-options, font);
					font-size: 1em;
					letter-spacing: 0.125em;
					text-transform: uppercase;
					white-space: nowrap;

					&:hover {

						color: map-get($hero-options, text-hover-color);

						&::before {
							width: 100%;
						}

					}

				}

				&:not(:last-child)::after {
					display: none;
					content: '/';
					margin: { 
						left: 0.5rem;
						right: 0.5rem;
					}
				}
				
			}

		}

		#{$self}-contact {

			li {

				display: block;

				a {

					@include transition(
						$property: (color),
						$duration: map-get($hero-options, duration),
						$delay: map-get($hero-options, delay),
						$ease: map-get($hero-options, ease),
						$optimize: false
					);
					overflow: hidden;
					position: relative;
					color: map-get($hero-options, text-color);
					font: map-get($hero-options, font);
					font-size: 1em;
					letter-spacing: 0.125em;
					text-transform: uppercase;
					white-space: nowrap;

					&:hover {

						color: map-get($hero-options, text-hover-color);

						&::before {
							width: 100%;
						}

					}

				}

				&:first-child {

					margin-bottom: 1rem;

					a {
						font-size: 1.25em;
					}

					/*
					&::after {
						content: '';
						position: absolute;
						bottom: 0;
						left: 0;
						width: 50%;
						height: 2px;
						background: $white;
					}
					*/				

				}

				&:last-child {
					margin-bottom: 4rem;
				}

			}

		}

		#{$self}-social {

			li {

				display: inline-block;

				a {

					@include transition(
						$property: (color),
						$duration: map-get($hero-options, duration),
						$delay: map-get($hero-options, delay),
						$ease: map-get($hero-options, ease),
						$optimize: false
					);
					overflow: hidden;
					position: relative;
					color: map-get($hero-options, text-color);
					font: map-get($hero-options, font);
					font-size: 1em;
					letter-spacing: 0.125em;
					text-transform: uppercase;
					white-space: nowrap;

					&:hover {

						color: map-get($hero-options, text-hover-color);

						&::before {
							width: 100%;
						}

					}

				}

			}

		}

		#{$self}-form {

			ul {

				li {

					@include shadow(
						$type: 'box-shadow',
						$color: $charcoal,
						$x: 3px,
						$y: 3px,
						$blur: 1px,
						$spread: 0,
						$alpha: 0.4,
						$strength: 0, 
						$inset: true
					);
					margin-bottom: 3rem;
					padding: {
						top: 0.5rem;
						right: 0.5rem;
						bottom: 0.5rem;
						left: 0rem;
					}
					width: 100%;
					height: 35px;
					font: $copy;
					color: $gray;
					border-radius: 0;
					border-bottom: thin solid $gray;
					//background: $light-gray;

					&:last-child {
						height: 100px;
					}

				}

			}

		}

		@include break($min: 0, $max: $tablet, $orientation: 'both') {
			max-width: 100%;
		}

	}

	&-legal {

		display: block;
		margin: {
			top: 6rem;
			right: auto;
			left: auto;
		}
		padding-bottom: 4rem;
		width: 100%;
		text-align: center;

		li {

			display: inline-block;
			color: $gray;
			font-size: 0.75em;
			letter-spacing: 0.125em;

			a {

				color: inherit;

				&:hover {
					color: $secondary;
				}

				&.made-by {

					&:hover {
						color: magenta;
					}

				}

			}

			&:last-child {
				margin-right: 0;
			}

			&:not(:last-child)::after {
				content: '/';
				margin: { 
					left: 0.5rem;
					right: 0.5rem;
				}
				color: $gray;
				font-size: 1em;
			}

		}

	}

	&-back-to-top {
		display: block;
		margin: {
			right: auto;
			left: auto;
		}
		padding-bottom: 4rem;
		width: 100%;
		color: $gray;
		text-align: center;
	}

	&-background {
		z-index: -1;
		opacity: 0.05;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		//background: url(../assets/backgrounds/pattern-floral.png);
		background-position: top left;
		background-repeat: repeat;
		background-size: auto;
	}

	@include break($min: 0, $max: $mobile, $orientation: 'both') {
		padding: {
			left: $gutter;
			right: $gutter;
		}
	}

}
